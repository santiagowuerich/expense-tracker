| name                         | title                        | level | facing   | categories      | description                                                                                                                                                                                                                                                 | detail                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | remediation                                                                                      | metadata                                                      | cache_key                                                                                                 |
| ---------------------------- | ---------------------------- | ----- | -------- | --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------ | ------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------- |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Allow individual delete access on tarjetas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Allow individual delete access on tarjetas                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Allow individual insert access on tarjetas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Allow individual insert access on tarjetas                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Allow individual select access on tarjetas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Allow individual select access on tarjetas                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Allow individual update access on tarjetas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Allow individual update access on tarjetas                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Users can delete their own cards\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Users can delete their own cards                                       |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Users can insert their own cards\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Users can insert their own cards                                       |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Users can update their own cards\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Users can update their own cards                                       |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`Users can view their own cards\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                         | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_Users can view their own cards                                         |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.tarjetas\` has a row level security policy \`tarjetas_owner_policy_setup\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                            | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"tarjetas","type":"table","schema":"public"}          | auth_rls_init_plan_public_tarjetas_tarjetas_owner_policy_setup                                            |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Allow individual delete access on pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Allow individual delete access on pagos                                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Allow individual insert access on pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Allow individual insert access on pagos                                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Allow individual select access on pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Allow individual select access on pagos                                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Allow individual update access on pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Allow individual update access on pagos                                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Users can delete their own pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                          | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Users can delete their own pagos                                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Users can insert their own pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                          | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Users can insert their own pagos                                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Users can update their own pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                          | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Users can update their own pagos                                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`Users can view their own pagos\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                            | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_Users can view their own pagos                                            |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.pagos\` has a row level security policy \`pagos_owner_policy_setup\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"pagos","type":"table","schema":"public"}             | auth_rls_init_plan_public_pagos_pagos_owner_policy_setup                                                  |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Allow individual delete access on price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Allow individual delete access on price_history                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Allow individual insert access on price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Allow individual insert access on price_history                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Allow individual select access on price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Allow individual select access on price_history                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Allow individual update access on price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                   | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Allow individual update access on price_history                   |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Users can delete their own price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                          | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Users can delete their own price_history                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Users can insert their own price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                          | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Users can insert their own price_history                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Users can update their own price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                          | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Users can update their own price_history                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.price_history\` has a row level security policy \`Users can view their own price_history\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                            | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"price_history","type":"table","schema":"public"}     | auth_rls_init_plan_public_price_history_Users can view their own price_history                            |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.categorias\` has a row level security policy \`Usuarios pueden actualizar sus propias categorias\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                    | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"categorias","type":"table","schema":"public"}        | auth_rls_init_plan_public_categorias_Usuarios pueden actualizar sus propias categorias                    |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.categorias\` has a row level security policy \`Usuarios pueden eliminar sus propias categorias\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                      | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"categorias","type":"table","schema":"public"}        | auth_rls_init_plan_public_categorias_Usuarios pueden eliminar sus propias categorias                      |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.categorias\` has a row level security policy \`Usuarios pueden insertar sus propias categorias\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                      | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"categorias","type":"table","schema":"public"}        | auth_rls_init_plan_public_categorias_Usuarios pueden insertar sus propias categorias                      |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.categorias\` has a row level security policy \`Usuarios pueden ver sus propias categorias\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                           | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"categorias","type":"table","schema":"public"}        | auth_rls_init_plan_public_categorias_Usuarios pueden ver sus propias categorias                           |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.clientes\` has a row level security policy \`Allow individual delete access on clientes\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"clientes","type":"table","schema":"public"}          | auth_rls_init_plan_public_clientes_Allow individual delete access on clientes                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.clientes\` has a row level security policy \`Allow individual insert access on clientes\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"clientes","type":"table","schema":"public"}          | auth_rls_init_plan_public_clientes_Allow individual insert access on clientes                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.clientes\` has a row level security policy \`Allow individual select access on clientes\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"clientes","type":"table","schema":"public"}          | auth_rls_init_plan_public_clientes_Allow individual select access on clientes                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.clientes\` has a row level security policy \`Allow individual update access on clientes\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                             | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"clientes","type":"table","schema":"public"}          | auth_rls_init_plan_public_clientes_Allow individual update access on clientes                             |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Allow individual delete access on ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Allow individual delete access on ventas                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Allow individual insert access on ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Allow individual insert access on ventas                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Allow individual select access on ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Allow individual select access on ventas                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Allow individual update access on ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Allow individual update access on ventas                                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Users can delete their own ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                        | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Users can delete their own ventas                                        |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Users can insert their own ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                        | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Users can insert their own ventas                                        |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Users can update their own ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                        | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Users can update their own ventas                                        |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.ventas\` has a row level security policy \`Users can view their own ventas\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                          | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"ventas","type":"table","schema":"public"}            | auth_rls_init_plan_public_ventas_Users can view their own ventas                                          |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.perfil_empresa\` has a row level security policy \`Allow individual delete access on perfil_empresa\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"perfil_empresa","type":"table","schema":"public"}    | auth_rls_init_plan_public_perfil_empresa_Allow individual delete access on perfil_empresa                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.perfil_empresa\` has a row level security policy \`Allow individual insert access on perfil_empresa\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"perfil_empresa","type":"table","schema":"public"}    | auth_rls_init_plan_public_perfil_empresa_Allow individual insert access on perfil_empresa                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.perfil_empresa\` has a row level security policy \`Allow individual select access on perfil_empresa\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"perfil_empresa","type":"table","schema":"public"}    | auth_rls_init_plan_public_perfil_empresa_Allow individual select access on perfil_empresa                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.perfil_empresa\` has a row level security policy \`Allow individual update access on perfil_empresa\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                 | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"perfil_empresa","type":"table","schema":"public"}    | auth_rls_init_plan_public_perfil_empresa_Allow individual update access on perfil_empresa                 |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.profiles\` has a row level security policy \`Users can update their own profile\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                     | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"profiles","type":"table","schema":"public"}          | auth_rls_init_plan_public_profiles_Users can update their own profile                                     |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.profiles\` has a row level security policy \`Users can view their own profile\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                                       | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"profiles","type":"table","schema":"public"}          | auth_rls_init_plan_public_profiles_Users can view their own profile                                       |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.movimientos_stock\` has a row level security policy \`Permitir inserción a usuarios autenticados que son dueños del\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info. | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"movimientos_stock","type":"table","schema":"public"} | auth_rls_init_plan_public_movimientos_stock_Permitir inserción a usuarios autenticados que son dueños del |
| auth_rls_initplan            | Auth RLS Initialization Plan | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if calls to \`current_setting()\` and \`auth.<function>()\` in RLS policies are being unnecessarily re-evaluated for each row                                                                                                                       | Table \`public.movimientos_stock\` has a row level security policy \`Permitir lectura a usuarios autenticados\` that re-evaluates current_setting() or auth.<function>() for each row. This produces suboptimal query performance at scale. Resolve the issue by replacing \`auth.<function>()\` with \`(select auth.<function>())\`. See [docs](https://supabase.com/docs/guides/database/postgres/row-level-security#call-functions-with-select) for more info.                      | https://supabase.com/docs/guides/database/database-linter?lint=0003_auth_rls_initplan            | {"name":"movimientos_stock","type":"table","schema":"public"} | auth_rls_init_plan_public_movimientos_stock_Permitir lectura a usuarios autenticados                      |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`anon\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                           | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_anon_DELETE                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`anon\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                           | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_anon_INSERT                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{"Allow individual select access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                           | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_anon_SELECT                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`anon\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                           | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_anon_UPDATE                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticated\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticated_DELETE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticated\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticated_INSERT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{"Allow individual select access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticated_SELECT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticated\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticated_UPDATE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticator\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticator_DELETE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticator\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticator_INSERT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{"Allow individual select access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticator_SELECT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`authenticator\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_authenticator_UPDATE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`dashboard_user\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_dashboard_user_DELETE                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`dashboard_user\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_dashboard_user_INSERT                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{"Allow individual select access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_dashboard_user_SELECT                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.clientes\` has multiple permissive policies for role \`dashboard_user\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on clientes","Los usuarios pueden gestionar sus propios clientes"}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"clientes","type":"table","schema":"public"}          | multiple_permissive_policies_public_clientes_dashboard_user_UPDATE                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`anon\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on pagos","Users can delete their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                          | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_anon_DELETE                                                     |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`anon\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on pagos","Users can insert their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                          | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_anon_INSERT                                                     |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{"Allow individual select access on pagos","Users can view their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                            | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_anon_SELECT                                                     |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`anon\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on pagos","Users can update their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                          | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_anon_UPDATE                                                     |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticated\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on pagos","Users can delete their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticated_DELETE                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticated\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on pagos","Users can insert their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticated_INSERT                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{"Allow individual select access on pagos","Users can view their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticated_SELECT                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticated\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on pagos","Users can update their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticated_UPDATE                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticator\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on pagos","Users can delete their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticator_DELETE                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticator\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on pagos","Users can insert their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticator_INSERT                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{"Allow individual select access on pagos","Users can view their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticator_SELECT                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`authenticator\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on pagos","Users can update their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_authenticator_UPDATE                                            |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`dashboard_user\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on pagos","Users can delete their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_dashboard_user_DELETE                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`dashboard_user\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on pagos","Users can insert their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_dashboard_user_INSERT                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{"Allow individual select access on pagos","Users can view their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_dashboard_user_SELECT                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.pagos\` has multiple permissive policies for role \`dashboard_user\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on pagos","Users can update their own pagos",pagos_owner_policy_setup}\`                                                                                                                                                                                                                                                | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"pagos","type":"table","schema":"public"}             | multiple_permissive_policies_public_pagos_dashboard_user_UPDATE                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`anon\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on price_history","Users can delete their own price_history"}\`                                                                                                                                                                                                                                                           | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_anon_DELETE                                             |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`anon\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on price_history","Users can insert their own price_history"}\`                                                                                                                                                                                                                                                           | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_anon_INSERT                                             |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{"Allow individual select access on price_history","Users can view their own price_history"}\`                                                                                                                                                                                                                                                             | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_anon_SELECT                                             |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`anon\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on price_history","Users can update their own price_history"}\`                                                                                                                                                                                                                                                           | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_anon_UPDATE                                             |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticated\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on price_history","Users can delete their own price_history"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticated_DELETE                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticated\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on price_history","Users can insert their own price_history"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticated_INSERT                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{"Allow individual select access on price_history","Users can view their own price_history"}\`                                                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticated_SELECT                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticated\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on price_history","Users can update their own price_history"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticated_UPDATE                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticator\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on price_history","Users can delete their own price_history"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticator_DELETE                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticator\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on price_history","Users can insert their own price_history"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticator_INSERT                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{"Allow individual select access on price_history","Users can view their own price_history"}\`                                                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticator_SELECT                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`authenticator\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on price_history","Users can update their own price_history"}\`                                                                                                                                                                                                                                                  | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_authenticator_UPDATE                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`dashboard_user\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on price_history","Users can delete their own price_history"}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_dashboard_user_DELETE                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`dashboard_user\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on price_history","Users can insert their own price_history"}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_dashboard_user_INSERT                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{"Allow individual select access on price_history","Users can view their own price_history"}\`                                                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_dashboard_user_SELECT                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.price_history\` has multiple permissive policies for role \`dashboard_user\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on price_history","Users can update their own price_history"}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"price_history","type":"table","schema":"public"}     | multiple_permissive_policies_public_price_history_dashboard_user_UPDATE                                   |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`anon\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on tarjetas","Users can delete their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_anon_DELETE                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`anon\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on tarjetas","Users can insert their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_anon_INSERT                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{"Allow individual select access on tarjetas","Users can view their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_anon_SELECT                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`anon\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on tarjetas","Users can update their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                                 | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_anon_UPDATE                                                  |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticated\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on tarjetas","Users can delete their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticated_DELETE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticated\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on tarjetas","Users can insert their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticated_INSERT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{"Allow individual select access on tarjetas","Users can view their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                          | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticated_SELECT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticated\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on tarjetas","Users can update their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticated_UPDATE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticator\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on tarjetas","Users can delete their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticator_DELETE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticator\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on tarjetas","Users can insert their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticator_INSERT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{"Allow individual select access on tarjetas","Users can view their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                          | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticator_SELECT                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`authenticator\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on tarjetas","Users can update their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                        | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_authenticator_UPDATE                                         |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`dashboard_user\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on tarjetas","Users can delete their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                       | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_dashboard_user_DELETE                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`dashboard_user\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on tarjetas","Users can insert their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                       | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_dashboard_user_INSERT                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{"Allow individual select access on tarjetas","Users can view their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                         | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_dashboard_user_SELECT                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.tarjetas\` has multiple permissive policies for role \`dashboard_user\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on tarjetas","Users can update their own cards",tarjetas_owner_policy_setup}\`                                                                                                                                                                                                                                       | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"tarjetas","type":"table","schema":"public"}          | multiple_permissive_policies_public_tarjetas_dashboard_user_UPDATE                                        |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`anon\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can delete their own ventas"}\`                                                                                                                                                                                                                             | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_anon_DELETE                                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`anon\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can insert their own ventas"}\`                                                                                                                                                                                                                             | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_anon_INSERT                                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`anon\` for action \`SELECT\`. Policies include \`{"Allow individual select access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can view their own ventas"}\`                                                                                                                                                                                                                               | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_anon_SELECT                                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`anon\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can update their own ventas"}\`                                                                                                                                                                                                                             | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_anon_UPDATE                                                    |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticated\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can delete their own ventas"}\`                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticated_DELETE                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticated\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can insert their own ventas"}\`                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticated_INSERT                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticated\` for action \`SELECT\`. Policies include \`{"Allow individual select access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can view their own ventas"}\`                                                                                                                                                                                                                      | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticated_SELECT                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticated\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can update their own ventas"}\`                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticated_UPDATE                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticator\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can delete their own ventas"}\`                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticator_DELETE                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticator\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can insert their own ventas"}\`                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticator_INSERT                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticator\` for action \`SELECT\`. Policies include \`{"Allow individual select access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can view their own ventas"}\`                                                                                                                                                                                                                      | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticator_SELECT                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`authenticator\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can update their own ventas"}\`                                                                                                                                                                                                                    | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_authenticator_UPDATE                                           |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`dashboard_user\` for action \`DELETE\`. Policies include \`{"Allow individual delete access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can delete their own ventas"}\`                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_dashboard_user_DELETE                                          |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`dashboard_user\` for action \`INSERT\`. Policies include \`{"Allow individual insert access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can insert their own ventas"}\`                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_dashboard_user_INSERT                                          |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`dashboard_user\` for action \`SELECT\`. Policies include \`{"Allow individual select access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can view their own ventas"}\`                                                                                                                                                                                                                     | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_dashboard_user_SELECT                                          |
| multiple_permissive_policies | Multiple Permissive Policies | WARN  | EXTERNAL | ["PERFORMANCE"] | Detects if multiple permissive row level security policies are present on a table for the same \`role\` and \`action\` (e.g. insert). Multiple permissive policies are suboptimal for performance as each policy must be executed for every relevant query. | Table \`public.ventas\` has multiple permissive policies for role \`dashboard_user\` for action \`UPDATE\`. Policies include \`{"Allow individual update access on ventas","Los usuarios pueden gestionar sus propias ventas","Users can update their own ventas"}\`                                                                                                                                                                                                                   | https://supabase.com/docs/guides/database/database-linter?lint=0006_multiple_permissive_policies | {"name":"ventas","type":"table","schema":"public"}            | multiple_permissive_policies_public_ventas_dashboard_user_UPDATE                                          |